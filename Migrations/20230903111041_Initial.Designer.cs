// <auto-generated />
using HallOfFame_Test.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HallOfFame_Test.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230903111041_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HallOfFame_Test.Models.Person", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("HallOfFame_Test.Models.Skill", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<byte>("level")
                        .HasColumnType("smallint");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("PersonSkill", b =>
                {
                    b.Property<long>("Personid")
                        .HasColumnType("bigint");

                    b.Property<int>("skillsid")
                        .HasColumnType("integer");

                    b.HasKey("Personid", "skillsid");

                    b.HasIndex("skillsid");

                    b.ToTable("PersonSkills", (string)null);
                });

            modelBuilder.Entity("PersonSkill", b =>
                {
                    b.HasOne("HallOfFame_Test.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("Personid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HallOfFame_Test.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("skillsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
